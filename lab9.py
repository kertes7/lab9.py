def calculate_cosmic_distance(speed_fraction, time_years):
    return speed_fraction * time_years

def calculate_gravitational_force(mass1, mass2, cosmic_factor=1.0):
    return mass1 * mass2 * cosmic_factor

def calculate_time_dilation(speed_fraction, time_seconds):
    if speed_fraction >= 1:
        raise ValueError("–ß–∞—Å—Ç–∫–∞ —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Å–≤—ñ—Ç–ª–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –º–µ–Ω—à–æ—é –∑–∞ 1.")
    return time_seconds / (1 - speed_fraction)

def get_float_input(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ.")

def main():
    print("üöÄ –í—ñ—Ç–∞—î–º–æ —É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ñ '–¢–∞—î–º–Ω–∏—Ü—ñ –í—Å–µ—Å–≤—ñ—Ç—É'!")
    while True:
        print("\n–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫:")
        print("1. –ö–æ—Å–º—ñ—á–Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—å")
        print("2. –°–ø—Ä–æ—â–µ–Ω–∞ –≥—Ä–∞–≤—ñ—Ç–∞—Ü—ñ—è")
        print("3. –°–ø–æ–≤—ñ–ª—å–Ω–µ–Ω–Ω—è —á–∞—Å—É")

        choice = input("–í–∞—à –≤–∏–±—ñ—Ä (1/2/3): ")

        if choice == "1":
            speed = get_float_input("–í–≤–µ–¥—ñ—Ç—å —á–∞—Å—Ç–∫—É –≤—ñ–¥ —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Å–≤—ñ—Ç–ª–∞ (0 < x ‚â§ 1): ")
            time = get_float_input("–í–≤–µ–¥—ñ—Ç—å —á–∞—Å —É —Ä–æ–∫–∞—Ö: ")
            result = calculate_cosmic_distance(speed, time)
            print(f"üåå –í—ñ–¥—Å—Ç–∞–Ω—å, —è–∫—É –ø—Ä–æ–π–¥–µ –æ–±'—î–∫—Ç: {result:.2f} —Å–≤—ñ—Ç–ª–æ–≤–∏—Ö —Ä–æ–∫—ñ–≤.")

        elif choice == "2":
            m1 = get_float_input("–í–≤–µ–¥—ñ—Ç—å –º–∞—Å—É –ø–µ—Ä—à–æ–≥–æ –æ–±'—î–∫—Ç–∞: ")
            m2 = get_float_input("–í–≤–µ–¥—ñ—Ç—å –º–∞—Å—É –¥—Ä—É–≥–æ–≥–æ –æ–±'—î–∫—Ç–∞: ")
            factor = get_float_input("–ö–æ—Å–º—ñ—á–Ω–∏–π –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 1.0): ") or 1.0
            result = calculate_gravitational_force(m1, m2, factor)
            print(f"ü™ê –°–ø—Ä–æ—â–µ–Ω–∞ –≥—Ä–∞–≤—ñ—Ç–∞—Ü—ñ–π–Ω–∞ –≤–∑–∞—î–º–æ–¥—ñ—è: {result:.2f} —É–º–æ–≤–Ω–∏—Ö –æ–¥–∏–Ω–∏—Ü—å.")

        elif choice == "3":
            speed = get_float_input("–í–≤–µ–¥—ñ—Ç—å —á–∞—Å—Ç–∫—É —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Å–≤—ñ—Ç–ª–∞ (–º–µ–Ω—à–µ 1): ")
            time = get_float_input("–í–≤–µ–¥—ñ—Ç—å —á–∞—Å —É —Å–µ–∫—É–Ω–¥–∞—Ö: ")
            try:
                result = calculate_time_dilation(speed, time)
                print(f"‚è≥ –°–ø–æ–≤—ñ–ª—å–Ω–µ–Ω–∏–π —á–∞—Å: {result:.2f} —Å–µ–∫—É–Ω–¥.")
            except ValueError as e:
                print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {e}")

        else:
            print("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")

        again = input("üîÅ –ë–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —â–µ –æ–¥–∏–Ω —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫? (—Ç–∞–∫/–Ω—ñ): ").strip().lower()
        if again != "—Ç–∞–∫":
            print("üå† –î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ '–¢–∞—î–º–Ω–∏—Ü—ñ –í—Å–µ—Å–≤—ñ—Ç—É'! –î–æ –Ω–æ–≤–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π!")
            break

if __name__ == "__main__":
    main()
